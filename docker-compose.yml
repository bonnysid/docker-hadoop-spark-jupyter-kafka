version: '3'

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
    container_name: namenode
    restart: always
    volumes:
      - ./data/namenode:/hadoop/dfs/name
    networks:
      - hadoop
    environment:
      - CLUSTER_NAME=test
      - ENABLE_INIT_DAEMON=true
      - INIT_DAEMON_BASE_URI=http://namenode:50070
      - INIT_DAEMON_STEP=setup_hdfs
    env_file:
      - ./hadoop.env
    ports:
      - 50070:50070

  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    container_name: datanode1
    restart: always
    depends_on:
      - namenode
    networks:
      - hadoop
    volumes:
      - ./data/datanode:/hadoop/dfs/data
    env_file:
      - ./hadoop.env
    ports:
      - 50075:50075

  datanode2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    container_name: datanode2
    restart: always
    depends_on:
      - namenode
    networks:
      - hadoop
    volumes:
      - ./data/datanode2:/hadoop/dfs/data
    env_file:
      - ./hadoop.env
    ports:
      - 50076:50076

  datanode3:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    container_name: datanode3
    restart: always
    depends_on:
      - namenode
    networks:
      - hadoop
    volumes:
      - ./data/datanode3:/hadoop/dfs/data
    env_file:
      - ./hadoop.env
    ports:
      - 50077:50077

  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    hostname: master
    container_name: spark-master
    restart: always
    networks:
      - hadoop
    environment:
      - CLUSTER_NAME=my-spark-cluster
      - ENABLE_INIT_DAEMON=true
      - INIT_DAEMON_BASE_URI=http://master:8080
      - INIT_DAEMON_STEP=setup_spark
    ports:
      - 8080:8080

  spark-worker:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    hostname: worker
    container_name: spark-worker
    restart: always
    networks:
      - hadoop
    environment:
      - CLUSTER_NAME=my-spark-cluster
      - SPARK_MASTER=spark://master:7077
      - ENABLE_INIT_DAEMON=true
      - INIT_DAEMON_BASE_URI=http://master:8080
      - INIT_DAEMON_STEP=setup_spark

  jupyter:
    image: jupyter/all-spark-notebook
    hostname: jupyter
    container_name: jupyter
    restart: always
    networks:
      - hadoop
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - GRANT_SUDO=yes
      - NB_UID=1000
      - NB_GID=100
      - HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop
      - SPARK_HOME=/usr/local/spark
    env_file:
      - ./hadoop.env
    ports:
      - 8888:8888

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    networks:
      - broker-kafka
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    container_name: kafka
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  hue:
    image: bde2020/hdfs-filebrowser:3.11
    ports:
      - 8088:8088
    depends_on:
      - namenode
    environment:
      - NAMENODE_HOST=namenode
    networks:
      - hadoop

networks:
  hadoop:
    driver: bridge
  broker-kafka:
    driver: bridge
